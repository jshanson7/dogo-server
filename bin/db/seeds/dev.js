'use strict';

var chance = require('chance').Chance();
var breeds = require('../breeds');
var _ = require('lodash');
var range = _.range;
var sample = _.sample;
var numberOfSeeds = 100;

var users = [{
  'first_name': 'Jeff',
  'last_name': 'Hanson',
  'created_at': new Date(),
  'updated_at': new Date()
}, {
  'first_name': 'Jon',
  'last_name': 'Snow',
  'created_at': new Date(),
  'updated_at': new Date()
}].concat(range(3, numberOfSeeds + 1).map(function (id) {
  return {
    'first_name': chance.first(),
    'last_name': chance.last(),
    'created_at': chance.date({ year: 2013 }),
    'updated_at': chance.date({ year: 2014 })
  };
}));

var dogs = [{
  'name': 'Matza',
  'breed': 'Labradoodle',
  'description': 'Cute dog that coughs alot.',
  'dot_color': 'green',
  'created_at': new Date(),
  'updated_at': new Date()
}, {
  'name': 'Ghost',
  'breed': 'Dire Wolf',
  'description': 'White with blue eyes, very loyal.',
  'dot_color': 'red',
  'created_at': new Date(),
  'updated_at': new Date()
}].concat(range(3, numberOfSeeds + 1).map(function (id) {
  return {
    'name': chance.last(),
    'breed': sample(breeds),
    'description': chance.sentence(),
    'dot_color': sample(['green', 'yellow', 'red']),
    'created_at': chance.date({ year: 2013 }),
    'updated_at': chance.date({ year: 2014 })
  };
}));

var notes = [{
  'text': 'Matza peed in the elevator.',
  'dog_id': 1,
  'user_id': 1,
  'created_at': new Date(),
  'updated_at': new Date()
}, {
  'text': 'Yesterday Ghost tore the throat out of a wildling.',
  'dog_id': 2,
  'user_id': 2,
  'created_at': new Date(),
  'updated_at': new Date()
}].concat(range(3, numberOfSeeds).map(function (id) {
  return {
    'text': chance.sentence(),
    'dog_id': sample(range(1, numberOfSeeds + 1)),
    'user_id': sample(range(1, numberOfSeeds + 1)),
    'created_at': chance.date({ year: 2013 }),
    'updated_at': chance.date({ year: 2014 })
  };
}));

exports.seed = function (knex, Promise) {
  return Promise.join(knex('notes').del(), knex('dogs').del(), knex('users').del(), knex('users').insert(users), knex('dogs').insert(dogs), knex('notes').insert(notes));
};
//# sourceMappingURL=data:application/json;base64,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LE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFDekIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FDNUIsQ0FBQztDQUNILENBQUMiLCJmaWxlIjoiZGIvc2VlZHMvZGV2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY2hhbmNlID0gcmVxdWlyZSgnY2hhbmNlJykuQ2hhbmNlKCk7XG52YXIgYnJlZWRzID0gcmVxdWlyZSgnLi4vYnJlZWRzJyk7XG52YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xudmFyIHJhbmdlID0gXy5yYW5nZTtcbnZhciBzYW1wbGUgPSBfLnNhbXBsZTtcbnZhciBudW1iZXJPZlNlZWRzID0gMTAwO1xuXG52YXIgdXNlcnMgPSBbXG4gIHtcbiAgICAnZmlyc3RfbmFtZSc6ICdKZWZmJyxcbiAgICAnbGFzdF9uYW1lJzogJ0hhbnNvbicsXG4gICAgJ2NyZWF0ZWRfYXQnOiBuZXcgRGF0ZSgpLFxuICAgICd1cGRhdGVkX2F0JzogbmV3IERhdGUoKSxcbiAgfSxcbiAge1xuICAgICdmaXJzdF9uYW1lJzogJ0pvbicsXG4gICAgJ2xhc3RfbmFtZSc6ICdTbm93JyxcbiAgICAnY3JlYXRlZF9hdCc6IG5ldyBEYXRlKCksXG4gICAgJ3VwZGF0ZWRfYXQnOiBuZXcgRGF0ZSgpLFxuICB9XG5dLmNvbmNhdChyYW5nZSgzLCBudW1iZXJPZlNlZWRzICsgMSkubWFwKGZ1bmN0aW9uKGlkKSB7XG4gIHJldHVybiB7XG4gICAgJ2ZpcnN0X25hbWUnOiBjaGFuY2UuZmlyc3QoKSxcbiAgICAnbGFzdF9uYW1lJzogY2hhbmNlLmxhc3QoKSxcbiAgICAnY3JlYXRlZF9hdCc6IGNoYW5jZS5kYXRlKHt5ZWFyOiAyMDEzfSksXG4gICAgJ3VwZGF0ZWRfYXQnOiBjaGFuY2UuZGF0ZSh7eWVhcjogMjAxNH0pLFxuICB9O1xufSkpO1xuXG52YXIgZG9ncyA9IFtcbiAge1xuICAgICduYW1lJzogJ01hdHphJyxcbiAgICAnYnJlZWQnOiAnTGFicmFkb29kbGUnLFxuICAgICdkZXNjcmlwdGlvbic6ICdDdXRlIGRvZyB0aGF0IGNvdWdocyBhbG90LicsXG4gICAgJ2RvdF9jb2xvcic6ICdncmVlbicsXG4gICAgJ2NyZWF0ZWRfYXQnOiBuZXcgRGF0ZSgpLFxuICAgICd1cGRhdGVkX2F0JzogbmV3IERhdGUoKSxcbiAgfSxcbiAge1xuICAgICduYW1lJzogJ0dob3N0JyxcbiAgICAnYnJlZWQnOiAnRGlyZSBXb2xmJyxcbiAgICAnZGVzY3JpcHRpb24nOiAnV2hpdGUgd2l0aCBibHVlIGV5ZXMsIHZlcnkgbG95YWwuJyxcbiAgICAnZG90X2NvbG9yJzogJ3JlZCcsXG4gICAgJ2NyZWF0ZWRfYXQnOiBuZXcgRGF0ZSgpLFxuICAgICd1cGRhdGVkX2F0JzogbmV3IERhdGUoKVxuICB9XG5dLmNvbmNhdChyYW5nZSgzLCBudW1iZXJPZlNlZWRzICsgMSkubWFwKGZ1bmN0aW9uKGlkKSB7XG4gIHJldHVybiB7XG4gICAgJ25hbWUnOiBjaGFuY2UubGFzdCgpLFxuICAgICdicmVlZCc6IHNhbXBsZShicmVlZHMpLFxuICAgICdkZXNjcmlwdGlvbic6IGNoYW5jZS5zZW50ZW5jZSgpLFxuICAgICdkb3RfY29sb3InOiBzYW1wbGUoWydncmVlbicsICd5ZWxsb3cnLCAncmVkJ10pLFxuICAgICdjcmVhdGVkX2F0JzogY2hhbmNlLmRhdGUoe3llYXI6IDIwMTN9KSxcbiAgICAndXBkYXRlZF9hdCc6IGNoYW5jZS5kYXRlKHt5ZWFyOiAyMDE0fSksXG4gIH07XG59KSk7XG5cbnZhciBub3RlcyA9IFtcbiAge1xuICAgICd0ZXh0JzogJ01hdHphIHBlZWQgaW4gdGhlIGVsZXZhdG9yLicsXG4gICAgJ2RvZ19pZCc6IDEsXG4gICAgJ3VzZXJfaWQnOiAxLFxuICAgICdjcmVhdGVkX2F0JzogbmV3IERhdGUoKSxcbiAgICAndXBkYXRlZF9hdCc6IG5ldyBEYXRlKCksXG4gIH0sXG4gIHtcbiAgICAndGV4dCc6ICdZZXN0ZXJkYXkgR2hvc3QgdG9yZSB0aGUgdGhyb2F0IG91dCBvZiBhIHdpbGRsaW5nLicsXG4gICAgJ2RvZ19pZCc6IDIsXG4gICAgJ3VzZXJfaWQnOiAyLFxuICAgICdjcmVhdGVkX2F0JzogbmV3IERhdGUoKSxcbiAgICAndXBkYXRlZF9hdCc6IG5ldyBEYXRlKCksXG4gIH1cbl0uY29uY2F0KHJhbmdlKDMsIG51bWJlck9mU2VlZHMpLm1hcChmdW5jdGlvbihpZCkge1xuICByZXR1cm4ge1xuICAgICd0ZXh0JzogY2hhbmNlLnNlbnRlbmNlKCksXG4gICAgJ2RvZ19pZCc6IHNhbXBsZShyYW5nZSgxLCBudW1iZXJPZlNlZWRzICsgMSkpLFxuICAgICd1c2VyX2lkJzogc2FtcGxlKHJhbmdlKDEsIG51bWJlck9mU2VlZHMgKyAxKSksXG4gICAgJ2NyZWF0ZWRfYXQnOiBjaGFuY2UuZGF0ZSh7eWVhcjogMjAxM30pLFxuICAgICd1cGRhdGVkX2F0JzogY2hhbmNlLmRhdGUoe3llYXI6IDIwMTR9KSxcbiAgfTtcbn0pKTtcblxuZXhwb3J0cy5zZWVkID0gZnVuY3Rpb24oa25leCwgUHJvbWlzZSkge1xuICByZXR1cm4gUHJvbWlzZS5qb2luKFxuICAgIGtuZXgoJ25vdGVzJykuZGVsKCksIFxuICAgIGtuZXgoJ2RvZ3MnKS5kZWwoKSwgXG4gICAga25leCgndXNlcnMnKS5kZWwoKSwgXG4gICAga25leCgndXNlcnMnKS5pbnNlcnQodXNlcnMpLFxuICAgIGtuZXgoJ2RvZ3MnKS5pbnNlcnQoZG9ncyksXG4gICAga25leCgnbm90ZXMnKS5pbnNlcnQobm90ZXMpXG4gICk7XG59O1xuIl19